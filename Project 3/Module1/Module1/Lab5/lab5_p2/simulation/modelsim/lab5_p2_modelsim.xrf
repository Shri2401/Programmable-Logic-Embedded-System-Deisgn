vendor_name = ModelSim
source_file = 1, C:/ECEN5863/Project 3/Submission/lab5_p2/toplevel.vhd
source_file = 1, C:/ECEN5863/Project 3/Submission/lab5_p2/mod_counter.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, C:/ECEN5863/Project 3/Submission/lab5_p2/db/lab5_p2.cbx.xml
design_name = toplevel
instance = comp, \hex0[0]~output , hex0[0]~output, toplevel, 1
instance = comp, \hex0[1]~output , hex0[1]~output, toplevel, 1
instance = comp, \hex0[2]~output , hex0[2]~output, toplevel, 1
instance = comp, \hex0[3]~output , hex0[3]~output, toplevel, 1
instance = comp, \hex0[4]~output , hex0[4]~output, toplevel, 1
instance = comp, \hex0[5]~output , hex0[5]~output, toplevel, 1
instance = comp, \hex0[6]~output , hex0[6]~output, toplevel, 1
instance = comp, \hex1[0]~output , hex1[0]~output, toplevel, 1
instance = comp, \hex1[1]~output , hex1[1]~output, toplevel, 1
instance = comp, \hex1[2]~output , hex1[2]~output, toplevel, 1
instance = comp, \hex1[3]~output , hex1[3]~output, toplevel, 1
instance = comp, \hex1[4]~output , hex1[4]~output, toplevel, 1
instance = comp, \hex1[5]~output , hex1[5]~output, toplevel, 1
instance = comp, \hex1[6]~output , hex1[6]~output, toplevel, 1
instance = comp, \hex2[0]~output , hex2[0]~output, toplevel, 1
instance = comp, \hex2[1]~output , hex2[1]~output, toplevel, 1
instance = comp, \hex2[2]~output , hex2[2]~output, toplevel, 1
instance = comp, \hex2[3]~output , hex2[3]~output, toplevel, 1
instance = comp, \hex2[4]~output , hex2[4]~output, toplevel, 1
instance = comp, \hex2[5]~output , hex2[5]~output, toplevel, 1
instance = comp, \hex2[6]~output , hex2[6]~output, toplevel, 1
instance = comp, \clock_50~input , clock_50~input, toplevel, 1
instance = comp, \clock_50~inputCLKENA0 , clock_50~inputCLKENA0, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~125 , CLK_DIVIDER|Add0~125, toplevel, 1
instance = comp, \reset_n~input , reset_n~input, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[0]~DUPLICATE , CLK_DIVIDER|count_signal[0]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~121 , CLK_DIVIDER|Add0~121, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[1]~DUPLICATE , CLK_DIVIDER|count_signal[1]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~117 , CLK_DIVIDER|Add0~117, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[2] , CLK_DIVIDER|count_signal[2], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~113 , CLK_DIVIDER|Add0~113, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[3]~DUPLICATE , CLK_DIVIDER|count_signal[3]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~109 , CLK_DIVIDER|Add0~109, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[4]~DUPLICATE , CLK_DIVIDER|count_signal[4]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~105 , CLK_DIVIDER|Add0~105, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[5] , CLK_DIVIDER|count_signal[5], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~101 , CLK_DIVIDER|Add0~101, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[6]~DUPLICATE , CLK_DIVIDER|count_signal[6]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~97 , CLK_DIVIDER|Add0~97, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[7] , CLK_DIVIDER|count_signal[7], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~93 , CLK_DIVIDER|Add0~93, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[8] , CLK_DIVIDER|count_signal[8], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~89 , CLK_DIVIDER|Add0~89, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[9] , CLK_DIVIDER|count_signal[9], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~85 , CLK_DIVIDER|Add0~85, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[10] , CLK_DIVIDER|count_signal[10], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~81 , CLK_DIVIDER|Add0~81, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[11] , CLK_DIVIDER|count_signal[11], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~77 , CLK_DIVIDER|Add0~77, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[12]~DUPLICATE , CLK_DIVIDER|count_signal[12]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~73 , CLK_DIVIDER|Add0~73, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[13] , CLK_DIVIDER|count_signal[13], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~69 , CLK_DIVIDER|Add0~69, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[14] , CLK_DIVIDER|count_signal[14], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~65 , CLK_DIVIDER|Add0~65, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[15]~DUPLICATE , CLK_DIVIDER|count_signal[15]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~61 , CLK_DIVIDER|Add0~61, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[16] , CLK_DIVIDER|count_signal[16], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~57 , CLK_DIVIDER|Add0~57, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[17]~DUPLICATE , CLK_DIVIDER|count_signal[17]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~53 , CLK_DIVIDER|Add0~53, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[18] , CLK_DIVIDER|count_signal[18], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~49 , CLK_DIVIDER|Add0~49, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[19]~DUPLICATE , CLK_DIVIDER|count_signal[19]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~45 , CLK_DIVIDER|Add0~45, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[20] , CLK_DIVIDER|count_signal[20], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~41 , CLK_DIVIDER|Add0~41, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[21] , CLK_DIVIDER|count_signal[21], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~37 , CLK_DIVIDER|Add0~37, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[22]~DUPLICATE , CLK_DIVIDER|count_signal[22]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~33 , CLK_DIVIDER|Add0~33, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[23] , CLK_DIVIDER|count_signal[23], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~29 , CLK_DIVIDER|Add0~29, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[24] , CLK_DIVIDER|count_signal[24], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~25 , CLK_DIVIDER|Add0~25, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[25] , CLK_DIVIDER|count_signal[25], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~21 , CLK_DIVIDER|Add0~21, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[26] , CLK_DIVIDER|count_signal[26], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~17 , CLK_DIVIDER|Add0~17, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[27]~DUPLICATE , CLK_DIVIDER|count_signal[27]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~13 , CLK_DIVIDER|Add0~13, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[28] , CLK_DIVIDER|count_signal[28], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~9 , CLK_DIVIDER|Add0~9, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[29] , CLK_DIVIDER|count_signal[29], toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~5 , CLK_DIVIDER|Add0~5, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[30] , CLK_DIVIDER|count_signal[30], toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[27] , CLK_DIVIDER|count_signal[27], toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[31]~DUPLICATE , CLK_DIVIDER|count_signal[31]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Add0~1 , CLK_DIVIDER|Add0~1, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[31] , CLK_DIVIDER|count_signal[31], toplevel, 1
instance = comp, \CLK_DIVIDER|Equal0~0 , CLK_DIVIDER|Equal0~0, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[22] , CLK_DIVIDER|count_signal[22], toplevel, 1
instance = comp, \CLK_DIVIDER|Equal0~1 , CLK_DIVIDER|Equal0~1, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[0] , CLK_DIVIDER|count_signal[0], toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[1] , CLK_DIVIDER|count_signal[1], toplevel, 1
instance = comp, \CLK_DIVIDER|Equal0~5 , CLK_DIVIDER|Equal0~5, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[3] , CLK_DIVIDER|count_signal[3], toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[4] , CLK_DIVIDER|count_signal[4], toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[6] , CLK_DIVIDER|count_signal[6], toplevel, 1
instance = comp, \CLK_DIVIDER|Equal0~4 , CLK_DIVIDER|Equal0~4, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[12] , CLK_DIVIDER|count_signal[12], toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[8]~DUPLICATE , CLK_DIVIDER|count_signal[8]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[11]~DUPLICATE , CLK_DIVIDER|count_signal[11]~DUPLICATE, toplevel, 1
instance = comp, \CLK_DIVIDER|Equal0~3 , CLK_DIVIDER|Equal0~3, toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[15] , CLK_DIVIDER|count_signal[15], toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[19] , CLK_DIVIDER|count_signal[19], toplevel, 1
instance = comp, \CLK_DIVIDER|count_signal[17] , CLK_DIVIDER|count_signal[17], toplevel, 1
instance = comp, \CLK_DIVIDER|Equal0~2 , CLK_DIVIDER|Equal0~2, toplevel, 1
instance = comp, \CLK_DIVIDER|Equal0~6 , CLK_DIVIDER|Equal0~6, toplevel, 1
instance = comp, \CLK_DIVIDER|rollover_signal , CLK_DIVIDER|rollover_signal, toplevel, 1
instance = comp, \ONES|count_signal[0]~3 , ONES|count_signal[0]~3, toplevel, 1
instance = comp, \ONES|count_signal[0] , ONES|count_signal[0], toplevel, 1
instance = comp, \ONES|count_signal[2]~1 , ONES|count_signal[2]~1, toplevel, 1
instance = comp, \ONES|count_signal[2] , ONES|count_signal[2], toplevel, 1
instance = comp, \ONES|count_signal~2 , ONES|count_signal~2, toplevel, 1
instance = comp, \ONES|count_signal[3] , ONES|count_signal[3], toplevel, 1
instance = comp, \ONES|count_signal~0 , ONES|count_signal~0, toplevel, 1
instance = comp, \ONES|count_signal[1] , ONES|count_signal[1], toplevel, 1
instance = comp, \Mux6~0 , Mux6~0, toplevel, 1
instance = comp, \Mux5~0 , Mux5~0, toplevel, 1
instance = comp, \Mux4~0 , Mux4~0, toplevel, 1
instance = comp, \Mux3~0 , Mux3~0, toplevel, 1
instance = comp, \Mux2~0 , Mux2~0, toplevel, 1
instance = comp, \Mux1~0 , Mux1~0, toplevel, 1
instance = comp, \Mux0~0 , Mux0~0, toplevel, 1
instance = comp, \ONES|Equal0~0 , ONES|Equal0~0, toplevel, 1
instance = comp, \ONES|rollover_signal , ONES|rollover_signal, toplevel, 1
instance = comp, \TENS|count_signal[0]~3 , TENS|count_signal[0]~3, toplevel, 1
instance = comp, \TENS|count_signal[0] , TENS|count_signal[0], toplevel, 1
instance = comp, \TENS|count_signal[1]~DUPLICATE , TENS|count_signal[1]~DUPLICATE, toplevel, 1
instance = comp, \TENS|count_signal[2] , TENS|count_signal[2], toplevel, 1
instance = comp, \TENS|count_signal~2 , TENS|count_signal~2, toplevel, 1
instance = comp, \TENS|count_signal[3] , TENS|count_signal[3], toplevel, 1
instance = comp, \TENS|count_signal~0 , TENS|count_signal~0, toplevel, 1
instance = comp, \TENS|count_signal[1] , TENS|count_signal[1], toplevel, 1
instance = comp, \TENS|count_signal[2]~1 , TENS|count_signal[2]~1, toplevel, 1
instance = comp, \TENS|count_signal[2]~DUPLICATE , TENS|count_signal[2]~DUPLICATE, toplevel, 1
instance = comp, \TENS|count_signal[3]~DUPLICATE , TENS|count_signal[3]~DUPLICATE, toplevel, 1
instance = comp, \Mux13~0 , Mux13~0, toplevel, 1
instance = comp, \Mux12~0 , Mux12~0, toplevel, 1
instance = comp, \Mux11~0 , Mux11~0, toplevel, 1
instance = comp, \Mux10~0 , Mux10~0, toplevel, 1
instance = comp, \Mux9~0 , Mux9~0, toplevel, 1
instance = comp, \Mux8~0 , Mux8~0, toplevel, 1
instance = comp, \Mux7~0 , Mux7~0, toplevel, 1
instance = comp, \TENS|Equal0~0 , TENS|Equal0~0, toplevel, 1
instance = comp, \TENS|rollover_signal , TENS|rollover_signal, toplevel, 1
instance = comp, \HUNDRED|count_signal[0]~3 , HUNDRED|count_signal[0]~3, toplevel, 1
instance = comp, \HUNDRED|count_signal[0] , HUNDRED|count_signal[0], toplevel, 1
instance = comp, \HUNDRED|count_signal[2]~1 , HUNDRED|count_signal[2]~1, toplevel, 1
instance = comp, \HUNDRED|count_signal[2] , HUNDRED|count_signal[2], toplevel, 1
instance = comp, \HUNDRED|count_signal~2 , HUNDRED|count_signal~2, toplevel, 1
instance = comp, \HUNDRED|count_signal[3] , HUNDRED|count_signal[3], toplevel, 1
instance = comp, \HUNDRED|count_signal~0 , HUNDRED|count_signal~0, toplevel, 1
instance = comp, \HUNDRED|count_signal[1] , HUNDRED|count_signal[1], toplevel, 1
instance = comp, \HUNDRED|count_signal[2]~DUPLICATE , HUNDRED|count_signal[2]~DUPLICATE, toplevel, 1
instance = comp, \Mux20~0 , Mux20~0, toplevel, 1
instance = comp, \Mux19~0 , Mux19~0, toplevel, 1
instance = comp, \Mux18~0 , Mux18~0, toplevel, 1
instance = comp, \Mux17~0 , Mux17~0, toplevel, 1
instance = comp, \Mux16~0 , Mux16~0, toplevel, 1
instance = comp, \Mux15~0 , Mux15~0, toplevel, 1
instance = comp, \Mux14~0 , Mux14~0, toplevel, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, toplevel, 1
